name: Terraform Workflow

on:
  push:
    branches:
      - main
    paths:
      - 'infra/**'
      - '.github/workflows/**'
      - 'terraform_action.txt'

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      action: ${{ steps.read_action.outputs.action }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read Terraform action from file
        id: read_action
        run: |
          ACTION=$(cat terraform_action.txt)
          echo "action=${ACTION}" >> $GITHUB_OUTPUT

  destroy-s3:
    needs: set-env
    if: needs.set-env.outputs.action == 'destroy'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.6'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Destroy S3 Bucket
        run: |
          cd infra/modules/s3
          terraform init
          terraform destroy -auto-approve

  destroy-iam:
    needs: destroy-s3
    if: needs.set-env.outputs.action == 'destroy'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.6'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Destroy IAM User Configuration
        run: |
          cd infra/modules/iam
          terraform init
          terraform destroy -auto-approve

  apply-iam:
    needs: set-env
    if: needs.set-env.outputs.action == 'apply'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.6'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Apply IAM User Configuration
        run: |
          cd infra/modules/iam
          terraform init
          terraform apply -auto-approve

  apply-s3:
    needs: apply-iam
    if: needs.set-env.outputs.action == 'apply'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.6'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Apply S3 Bucket Configuration
        run: |
          cd infra/modules/s3
          terraform init
          terraform apply -auto-approve
